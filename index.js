'use strict'

const names = '^[_-]?[a-z][a-z0-9-]+?[a-z0-9]$'

module.exports = {
  // overrides: [
  //   {
  //     files: ['**/*.(scss|css)'],
  //     customSyntax: 'postcss-scss',
  //   },
  //   {
  //     files: ['**/*.(html|vue)'],
  //     customSyntax: 'postcss-html',
  //   },
  // ],
  plugins: [
    'stylelint-scss',

    'stylelint-order',

    'stylelint-declaration-strict-value',

    'stylelint-declaration-block-no-ignored-properties',
    // 'stylelint-color-format',
    'stylelint-high-performance-animation',
    // 'stylelint-no-indistinguishable-colors',
    'stylelint-no-unsupported-browser-features',
    // 'stylelint-selector-tag-no-without-class',
    'stylelint-csstree-validator',

    'stylelint-use-nesting-scss',
  ],

  extends: [
    // 'stylelint-config-standard',
    'stylelint-config-standard-scss',
    'stylelint-config-recommended-vue/scss',
    // last - disable conflicts with prettier
    'stylelint-config-prettier-scss',
  ],

  rules: {
    'nesting/use-nesting': ['always', { except: [':selection', /^:dir/i] }],
    'selector-class-pattern': names,
    'max-nesting-depth': 4,
    'font-weight-notation': 'numeric',
    'value-keyword-case': [
      'lower',
      {
        camelCaseSvgKeywords: true,
      },
    ],
    'at-rule-empty-line-before': [
      'always',
      {
        except: [
          'after-same-name',
          // "inside-block",
          // "blockless-after-same-name-blockless",
          // "blockless-after-blockless",
          'first-nested',
        ],
        ignore: [
          'after-comment',
          'first-nested',
          // "inside-block",
          'blockless-after-same-name-blockless',
          'blockless-after-blockless',
        ],
        ignoreAtRules: ['else'],
      },
    ],
    'rule-empty-line-before': [
      'always',
      {
        // ignore: ["after-comment", "first-nested"],
        except: ['after-single-line-comment', 'first-nested'],
      },
    ],

    'shorthand-property-no-redundant-values': true,

    'selector-pseudo-element-no-unknown': [
      true,
      {
        ignorePseudoElements: ['v-deep'],
      },
    ],

    'value-list-comma-newline-after': 'always-multi-line',
    'value-list-comma-space-after': 'always-single-line',
    'value-list-comma-space-before': 'never',

    'order/order': [
      [
        {
          type: 'at-rule',
          name: 'use',
          hasBlock: false,
        },
        {
          type: 'at-rule',
          name: 'import',
          hasBlock: false,
        },
        'dollar-variables',
        'custom-properties',
        {
          type: 'at-rule',
          name: 'include',
          hasBlock: false,
        },
        {
          type: 'at-rule',
          name: 'extend',
        },
        'declarations',
        'rules',
        {
          type: 'rule',
          selector: '/^&/',
        },
        {
          type: 'rule',
          selector: '/^&:\\w/',
        },
        {
          // mixins
          type: 'at-rule',
          name: 'include',
          hasBlock: true,
          emptyLineBefore: true,
        },
        'at-rules',
      ],
    ],
    'order/properties-order': [
      [
        'content',
        'position',
        'inset',
        'top',
        'right',
        'bottom',
        'left',
        'z-index',
        'display',
        'vertical-align',
        'flex',
        'flex-grow',
        'flex-shrink',
        'flex-basis',
        'flex-direction',
        'flex-flow',
        'flex-wrap',
        'grid',
        'grid-area',
        'grid-template',
        'grid-template-areas',
        'grid-template-rows',
        'grid-template-columns',
        'grid-row',
        'grid-row-start',
        'grid-row-end',
        'grid-column',
        'grid-column-start',
        'grid-column-end',
        'grid-auto-rows',
        'grid-auto-columns',
        'grid-auto-flow',
        'grid-gap',
        'grid-row-gap',
        'grid-column-gap',
        'gap',
        'row-gap',
        'column-gap',
        'place-content',
        'align-content',
        'justify-content',
        'place-items',
        'align-items',
        'justify-items',
        'place-self',
        'align-self',
        'justify-self',
        'order',
        'float',
        'clear',
        'object-fit',
        'object-position',
        'overflow',
        'overflow-x',
        'overflow-y',
        'overflow-scrolling',
        'clip',

        //
        'box-sizing',
        'width',
        'min-width',
        'max-width',
        'height',
        'min-height',
        'max-height',
        'margin',
        'margin-inline',
        'margin-block',
        'margin-top',
        'margin-right',
        'margin-bottom',
        'margin-left',
        'padding',
        'padding-inline',
        'padding-block',
        'padding-top',
        'padding-right',
        'padding-bottom',
        'padding-left',
        'border',
        'border-spacing',
        'border-collapse',
        'border-width',
        'border-style',
        'border-color',
        'border-top',
        'border-top-width',
        'border-top-style',
        'border-top-color',
        'border-right',
        'border-right-width',
        'border-right-style',
        'border-right-color',
        'border-bottom',
        'border-bottom-width',
        'border-bottom-style',
        'border-bottom-color',
        'border-left',
        'border-left-width',
        'border-left-style',
        'border-left-color',
        'border-radius',
        'border-top-left-radius',
        'border-top-right-radius',
        'border-bottom-right-radius',
        'border-bottom-left-radius',
        'border-image',
        'border-image-source',
        'border-image-slice',
        'border-image-width',
        'border-image-outset',
        'border-image-repeat',
        'border-top-image',
        'border-right-image',
        'border-bottom-image',
        'border-left-image',
        'border-corner-image',
        'border-top-left-image',
        'border-top-right-image',
        'border-bottom-right-image',
        'border-bottom-left-image',

        //
        'background',
        'background-color',
        'background-image',
        'background-attachment',
        'background-position',
        'background-position-x',
        'background-position-y',
        'background-clip',
        'background-origin',
        'background-size',
        'background-repeat',
        'color',
        'box-decoration-break',
        'box-shadow',
        'outline',
        'outline-width',
        'outline-style',
        'outline-color',
        'outline-offset',
        'table-layout',
        'caption-side',
        'empty-cells',
        'list-style',
        'list-style-position',
        'list-style-type',
        'list-style-image',

        //
        'font',
        'font-weight',
        'font-style',
        'font-variant',
        'font-size-adjust',
        'font-stretch',
        'font-size',
        'font-family',
        'src',
        'line-height',
        'letter-spacing',
        'quotes',
        'counter-increment',
        'counter-reset',
        '-ms-writing-mode',
        'text-align',
        'text-align-last',
        'text-decoration',
        'text-emphasis',
        'text-emphasis-position',
        'text-emphasis-style',
        'text-emphasis-color',
        'text-indent',
        'text-justify',
        'text-outline',
        'text-transform',
        'text-wrap',
        'text-overflow',
        'text-overflow-ellipsis',
        'text-overflow-mode',
        'text-shadow',
        'white-space',
        'word-spacing',
        'word-wrap',
        'word-break',
        'overflow-wrap',
        'tab-size',
        'hyphens',
        'interpolation-mode',

        //
        'opacity',
        'visibility',
        'filter',
        'resize',
        'cursor',
        'pointer-events',
        'user-select',

        //
        'unicode-bidi',
        'direction',
        'columns',
        'column-span',
        'column-width',
        'column-count',
        'column-fill',
        'column-gap',
        'column-rule',
        'column-rule-width',
        'column-rule-style',
        'column-rule-color',
        'break-before',
        'break-inside',
        'break-after',
        'page-break-before',
        'page-break-inside',
        'page-break-after',
        'orphans',
        'widows',
        'zoom',
        'max-zoom',
        'min-zoom',
        'user-zoom',
        'orientation',
        'fill',
        'stroke',

        //
        'transition',
        'transition-delay',
        'transition-timing-function',
        'transition-duration',
        'transition-property',
        'transform',
        'transform-origin',
        'animation',
        'animation-name',
        'animation-duration',
        'animation-play-state',
        'animation-timing-function',
        'animation-delay',
        'animation-iteration-count',
        'animation-direction',
        'animation-fill-mode',
      ],
      {
        unspecified: 'bottom',
        severity: 'warning',
      },
    ],
    'function-url-no-scheme-relative': true,
    'function-url-quotes': 'always',
    'media-feature-name-no-unknown': true,

    'scss/media-feature-value-dollar-variable': 'always',

    'at-rule-no-vendor-prefix': true,
    'media-feature-name-no-vendor-prefix': true,
    'property-no-vendor-prefix': true,
    'value-no-vendor-prefix': true,
    'selector-no-vendor-prefix': true,

    'scss/double-slash-comment-whitespace-inside': 'always',
    'scss/declaration-nested-properties': 'never',
    'scale-unlimited/declaration-strict-value': [
      ['/color/', 'z-index', 'font-size', 'font-family'],
      {
        ignoreKeywords: {
          '': ['inherit', '0'],
          '/color/': ['currentColor', 'transparent', 'inherit', 'auto', 'none'],
        },
        // autofix function should be project specific https://github.com/AndyOGo/stylelint-declaration-strict-value
        autoFixFunc: function () {},
        disableFix: false,
      },
    ],
    'scss/dollar-variable-no-missing-interpolation': true,
    'scss/dollar-variable-colon-space-after': 'always',
    'scss/dollar-variable-colon-space-before': 'never',
    'scss/dollar-variable-pattern': names,
    'scss/no-duplicate-dollar-variables': [
      true,
      {
        ignoreInside: ['at-rule', 'nested-at-rule'],
        ignoreInsideAtRules: ['if', 'mixin', 'each', 'else'],
      },
    ],
    'scss/percent-placeholder-pattern': names,
    'scss/at-extend-no-missing-placeholder': true,
    // 'scss/at-mixin-named-arguments': 'always',
    'scss/at-mixin-pattern': names,
    // 'scss/at-function-named-arguments': 'always',
    'scss/at-function-pattern': names,

    'selector-max-universal': 1,
    'selector-max-specificity': '1,3,3', // id,class,type
    'selector-max-compound-selectors': 3,
    'scss/selector-no-redundant-nesting-selector': true,
    'scss/at-import-no-partial-leading-underscore': true,
    'scss/at-import-partial-extension-blacklist': ['scss'],

    'color-named': 'never',
    // 'color-format/format': { 'format': 'rgb' },

    'plugin/no-low-performance-animation-properties': [
      true,
      { ignoreProperties: ['color', 'background-color'] },
    ],
    // 'plugin/stylelint-no-indistinguishable-colors': true,
    // 'plugin/selector-tag-no-without-class': ['div', 'span'],
    'plugin/declaration-block-no-ignored-properties': true,
    'plugin/no-unsupported-browser-features': [true, { severity: 'warning' }],

    'scss/operator-no-newline-after': null,
    'scss/operator-no-newline-before': null,

    'color-no-invalid-hex': true,
    'declaration-block-no-duplicate-custom-properties': true,
    'declaration-block-no-duplicate-properties': [
      true,
      {
        // https://stylelint.io/user-guide/rules/declaration-block-no-duplicate-properties/#ignore-consecutive-duplicates-with-same-prefixless-values
        ignore: ['consecutive-duplicates-with-same-prefixless-values'],
      },
    ],
    'font-family-no-duplicate-names': true,
    'no-duplicate-at-import-rules': true,
    'no-duplicate-selectors': true,

    'function-no-unknown': [
      true,
      {
        ignoreFunctions: [
          '/^map\\..+/',
          '/^color\\..+/',
          '/^math\\..+/',
          '/^list\\..+/',
        ],
      },
    ],

    'csstree/validator': {
      syntaxExtensions: ['sass'],
      ignoreAtrules: ['if', 'else'],
      types: {
        length: '| <rem()> | rem ',
        '<length>': '| <rem()> | rem',
        'rem()': 'rem( <length> )',
      },
      properties: {
        length: '| rem( <length> ) ',
        '<length>': '| rem( <length> ) ',
        width: '| rem( <length> ) | fit-content',
        height: '| rem( <length> )',
        'min-width': '| rem( <length> )',
        'max-width': '| rem( <length> )',
        'min-height': '| rem( <length> )',
        'max-height': '| rem( <length> )',
        'font-size': '| rem( <length> )',
        'line-height': '| rem( <length> )',
        content: '| attr( <attr-name> <type-or-unit>? [, <attr-fallback> ]? )',

        top: '| rem( <length> )',
        left: '| rem( <length> )',
        right: '| rem( <length> )',
        bottom: '| rem( <length> )',
        'padding-left': '| rem( <length> )',
        'padding-right': '| rem( <length> )',
        'padding-top': '| rem( <length> )',
        'padding-bottom': '| rem( <length> )',
        padding:
          '| [<length>|<percentage>|rem( <length> )]{1,4} | rem( <length>{1,4} )',
        'margin-left': '| rem( <length> )',
        'margin-right': '| rem( <length> )',
        'margin-top': '| rem( <length> )',
        'margin-bottom': '| rem( <length> )',
        margin: '| [<length>|<percentage>|rem( <length> )|auto]{1,4}',
        'border-radius': '| rem( <length> )',
        'letter-spacing': '| rem( <length> )',
        'row-gap': '| rem( <length> )',
        'column-gap': '| rem( <length> )',
        gap: '| [rem( <length> )]{1,2}',
      },
    },
  },
}
